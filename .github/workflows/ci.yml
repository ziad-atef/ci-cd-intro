name: Continuous Integration Workflow

# This workflow is triggered whenever a new PR is created on the main branch
on:
  pull_request:
    branches:
      - main
    paths:
      - 'web/**'
  push:
    branches:
      - main
    paths:
      - 'web/**'
  workflow_dispatch:

jobs:
  cache:
    name: 'Cache dependencies'
    defaults:
      run:
        shell: bash
        working-directory: ./web
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      name: 'Checkout repository'

    - name: 'Cache node modules'
      id: cache-npm
      uses: actions/cache@v3
      env:
          cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}--${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

    - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
      name: List the state of node modules
      continue-on-error: true
      run: npm list

    - name: Install dependencies
      # only run npm if cache not found
      if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
      run: npm install


  # Run unit tests to make sure everything is üëç
  test:
    name: 'Run unit tests'
    defaults:
      run:
        shell: bash
        # Define the working directory for all run steps in the workflow
        working-directory: ./web
    # Specify the OS we want the workflow to run on
    runs-on: ubuntu-latest
    # Define the steps for this job
    steps:
    - uses: actions/checkout@v4
      name: 'Checkout repository'

    - name: 'Cache node modules'
      id: cache-npm
      uses: actions/cache@v3
      env:
          cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}--${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

    - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
      name: List the state of node modules
      continue-on-error: true
      run: npm list

    - name: Install dependencies
      # only run npm if cache not found
      if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
      run: npm install
    
    - name: 'Run Tests'
      run: npm run test

  # Run the linter to check for code style issues
  lint:
    name: 'Run linter'
    defaults:
      run:
        shell: bash
        # Define the working directory for all run steps in the workflow
        working-directory: ./web
    runs-on: ubuntu-latest
    steps:    
    - uses: actions/checkout@v2
      name: 'Checkout repository'
    
    - name: 'Install Dependencies'
      run: npm install

    - name: 'Run Linter'
      run: npx standard -v
